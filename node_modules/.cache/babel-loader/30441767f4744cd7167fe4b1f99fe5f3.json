{"ast":null,"code":"var _jsxFileName = \"/home/tarek/react-ros-robot/src/components/Teleoperation.jsx\";\nimport React, { Component } from 'react';\nimport { Joystick } from 'react-joystick-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n  }\n\n  handleMove() {\n    console.log(\"Handle Move\"); //We need to create ROS Publisher on the Topic cmd_vel\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros\n    }); //We need to create Twist message to be sent to ROSBridge\n    //We need to Publish the message on the cmd_vel Topic\n  }\n\n  handleStop() {\n    console.log(\"Handle Stop\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Teleoperation;","map":{"version":3,"sources":["/home/tarek/react-ros-robot/src/components/Teleoperation.jsx"],"names":["React","Component","Joystick","Teleoperation","constructor","state","ros","init_connection","handleMove","console","log","cmd_vel","window","ROSLIB","Topic","handleStop","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAqC;AAEjCG,EAAAA,WAAW,GAAE;AACT;AADS,SADbC,KACa,GADL;AAACC,MAAAA,GAAG,EAAE;AAAN,KACK;AAET,SAAKC,eAAL;AACH;;AAGDC,EAAAA,UAAU,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADS,CAGT;;AACA,QAAIC,OAAO,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,KAAlB,CAAwB;AAClCR,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AADkB,KAAxB,CAAd,CAJS,CAQT;AAEA;AACH;;AACDS,EAAAA,UAAU,GAAG;AACTN,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAA,6BACI,QAAC,QAAD;AACA,QAAA,IAAI,EAAE,GADN;AAEA,QAAA,SAAS,EAAC,SAFV;AAGA,QAAA,UAAU,EAAC,SAHX;AAIA,QAAA,IAAI,EAAE,KAAKR,UAJX;AAKA,QAAA,IAAI,EAAE,KAAKO;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAaH;;AAtCgC;;AAwCrC,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Joystick } from 'react-joystick-component';\n\nclass Teleoperation extends Component{\n    state = {ros: null};\n    constructor(){\n        super();\n        this.init_connection();\n    }\n    \n\n    handleMove() {\n        console.log(\"Handle Move\");\n\n        //We need to create ROS Publisher on the Topic cmd_vel\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n        }\n        );\n        //We need to create Twist message to be sent to ROSBridge\n\n        //We need to Publish the message on the cmd_vel Topic\n    }\n    handleStop() {\n        console.log(\"Handle Stop\");\n    }\n\n    render(){\n        return(\n        <div>\n            <Joystick \n            size={100} \n            baseColor=\"#EEEEEE\" \n            stickColor=\"#BBBBBB\" \n            move={this.handleMove} \n            stop={this.handleStop}>\n\n            </Joystick>\n\n        </div>\n        );\n    }\n}\nexport default Teleoperation; "]},"metadata":{},"sourceType":"module"}